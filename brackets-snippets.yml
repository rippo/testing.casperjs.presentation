- trigger: csp-pres-02-nav-test
  description: PRESENTATION - Casper TEST 02
  scope: javascript
  mTime: 1433316316680
  text: |
        casper.test.begin('Navigation test', 4, function (test) {
        
            casper.start("http://localhost:43502", function () {
                test.assertTitle("Home - CasperJS Mvc");
                test.assertTextExists("Casper MVC", "Casper MVC is present on page");
            });
        
            casper.thenClick('ul > li:nth-child(2) > a', function () {
                test.assertUrlMatch("/home/about", "URL ends with Home/About");
                test.assertTitle("About - CasperJS Mvc");
            });
        
            casper.run(function () {
                test.done();
            });
        });

- trigger: csp-pres-01-first-test
  description: PRESENTATION - Casper TEST 01
  scope: javascript
  mTime: 1432838130539
  text: |
        casper.test.begin('Home Page Tests', 3, function (test) {
        
            casper.start("http://localhost:43502", function () {
                test.assertTitle("Home - CasperJS Mvc");
                test.assertTextExists("Casper MVC", "Casper MVC is present on page");
                test.assertTextExists("Ariya Hidayat", "Ariya Hidayat is present on page");
            });
        
            casper.run(function () {
                test.done();
            });
        
        });

- trigger: csp-pres-00-grab
  scope: javascript
  description: PRESENTATION - Casper GRAB
  mTime: 1432823268379
  text: |
        var casper = require('casper').create();
        
        casper.start('http://www.google.co.uk', function () {
            this.echo(this.getTitle());
        });
        
        casper.thenOpen('http://localhost:43502', function () {
            this.echo(this.getTitle());
            this.capture("screen.jpg");
        });
        
        casper.run();

- trigger: cspfills
  description: Casper Fill Selector
  scope: javascript
  mTime: 1429120058623
  text: |
        ${1:this}.fillSelectors('${2:form}', {
            "input[name='${3:1st-field-selector}'": '${4:value}',
            "input[name='${5:2nd-field-selector}'": '${6:value}'
        }, ${7:true});

- scope: javascript
  trigger: csp-po-login
  description: Casper Page Object Login
  mTime: 1429119810855
  text: |
        function LoginPage() {
        
            this.startOnLoginPage = function () {
                //casper.echo("base url is : " + casper.cli.options.baseUrl);
                casper.start(casper.cli.options.baseUrl + '/account');
            };
        
            this.fullLogin = function(username, password) {
                this.startOnLoginPage();
                this.checkPage();
                this.fillForm(username, password);
                this.submitForm();
            };
        
        
            this.checkPage = function () {
                casper.waitForSelector("#Username", function () {
                    casper.test.assertUrlMatch('account', 'is on login page');
                    casper.test.assertExists('form', 'login page form has been found');
                });
            };
        
            this.fillForm = function (username, password) {
                casper.waitForSelector("#Username", function () {
                    casper.fillSelectors('form', {
                        "input[name='Username']": username,
                        "input[name='Password']": password,
                    }, false);
                });
            };
        
            this.submitForm = function () {
                casper.then(function () {
                    casper.click('form input[type="submit"]', 'login submit button clicked');
                });
            };
        
            this.checkUsernameValidation = function() {
                casper.waitForSelector("#Username", function () {
                    casper.test.assertTextExists("The Username field is required", "username required message shown");
                });
            }
        
            this.checkPasswordValidation = function () {
                casper.waitForSelector("#Username", function () {
                    casper.test.assertTextExists("The Password field is required", "password required message shown");
                });
            }
        
        }

- trigger: csptest
  description: Casper Test
  scope: javascript
  mTime: 1429118995843
  text: |
        casper.test.begin('${1:Test description}', ${2:2}, function(test) {
            casper.start('${3:http://}', function() {
                test.assertTitle('${4:First title}');
            });
        
            casper.thenOpen('${5:http://}', function() {
                test.assertTitle('${6:Second title}');
            });
        
            casper.run(function() {
                test.done();
            });
        });

- trigger: cspfulltest
  description: Casper test suite full
  scope: javascript
  mTime: 1429118941818
  text: |
        casper.test.begin('${1:Test description}', ${2:2}, {
            setUp: function(test) {
                ${3:// setup instructions...}
            },
        
            tearDown: function(test) {
                ${4:// tear down instructions...}
            },
        
            test: function(test) {
                ${5:// tests}
                test.done();
            }
        });

- trigger: csp-pres-03-form-01
  description: PRESENTATION - Casper fill in a form
  scope: javascript
  mTime: 1433227373832
  text: |
        casper.test.begin('Contact Page', 5, function (test) {
        
            casper.start("http://localhost:43502/home/contact", function () {
                test.assertTitle("Contact - CasperJS Mvc", "Page title matches 'Contact - CasperJS Mvc'");
                test.assertExists('form[action="/home/contact"]', "Contact form found");
        
                //FILL FORM
        
            });
            
            //FILL FORM WITH INVALID EMAIL
            
            //FILL FORM WITH VALID EMAIL
        
            casper.waitForUrl("/home/thanks", function () {
                test.assertTextExists("Thanks", "Thanks H1 header is shown");
            }, null, 1000);
        
            casper.run(function () {
                test.done();
            });
        });
        

- trigger: csp-pres-03-form-02
  description: PRESENTATION - Casper WaitForSelector
  scope: javascript
  mTime: 1433227918048
  text: |
        casper.waitForSelector('#EmailAddress', function() {
            test.assertTextExists("", "");
            this.fillSelectors('form', {
                "input[name='EmailAddress']": ''
            }, true);
        });

- scope: javascript
  trigger: csp-pres-04-timings
  description: PRESENTATION - Casper Timings
  mTime: 1433228912521
  text: |
        
        casper.test.begin('Timings tests', 2, function (test) {
        
            casper.start('http://localhost:43502/timings');
        
            casper.then(function () {
                test.assertExists("button#btnModal", "Launch button is shown");
                this.click("button#btnModal");
            });
        
            casper.wait(100, function () {
                this.capture("timings.jpg");
                test.assertVisible("#myModal");
            });
        
            casper.run(function () { test.done(); });
        });
        
        

- trigger: csp-pres-05-evaluate-01
  description: PRESENTATION - Casper Evaluate
  scope: javascript
  mTime: 1433231003530
  text: |
        casper.test.begin('Evaluate tests', 2, function (test) {
        
            casper.start('http://localhost:43502/evaluate');
        
            //DROP INTO DOM TO CHANGE DROPDOWN TO UK
        
            //DROP INTO DOM TO CHANGE DROPDOWN TO ES
            
            casper.run(function () { test.done(); });
        });

- trigger: csp-pres-05-evaluate-02
  description: PRESENTATION - Casper Evaluate 02
  scope: javascript
  mTime: 1433231333128
  text: |
        casper.thenEvaluate(function () {
            $('#CountryList').val('').change();
        });
        
        casper.then(function () {
            test.assertTextExists("Selected country code: XX", "Selected country code: XX text exists");
        });
        

- trigger: csp-pres-06-looping
  description: PRESENTATION - Casper looping
  scope: javascript
  mTime: 1433233277652
  text: |
        //Looping
        casper.test.begin('Wizard', 101, function (test) {
        
            //initial 50 loops
            var loop = [];
            for (var i = 1; i <= 50; i++) { loop.push(i); }
        
            casper.start("http://localhost:43502/wizard/index/1");
        
            //notice loop forEach is inside a casper function...
            casper.waitForSelector("input[name='Answer']", function () {
        
                loop.forEach(function (item) {
        
                    //All tests must be inside a casper function
                    casper.waitForSelector("input[name='Answer']", function () {
                        test.assertTitle("Wizard Step: " + item + " - CasperJS Mvc");
                        this.fillSelectors('form', {}, true);
                    });
        
                    casper.waitForSelector("input[name='Answer']", function () {
                        test.assertTextExists("The Answer field is required", "Required validation message shown");
                        this.fillSelectors('form', {
                            "input[name='Answer']": 'An answer'
                        }, true);
                    });
        
                });
        
            });
        
            casper.waitForUrl(/wizard\/finished/, function () {
                test.assertTitle("Finished - CasperJS Mvc");
            });
        
            casper.run(function () {
                test.done();
            });
        
        });

- trigger: csp-pres-08-events-01-success
  description: ""
  scope: javascript
  mTime: 1433839247405
  text: |
        casper.test.begin('Events - Listeners', function (test) {
        
            casper.start(casper.cli.options.baseUrl, function () {
                test.assertTitle("Home - CasperJS Mvc", "Page title is correct");
                test.assertTextExists("Ariya Hidayat", "Ariya Hidayat is present on page");
            });
        
            casper.run(function () {
                test.done();
                
                //require('utils').dump(successes);
                
                successes.forEach(function(item){
                    casper.echo(item.standard);
                });
            });
        
            var successes = [];
        
            casper.test.on("success", function(success) {
                successes.push(success);
            });
            
        });

- trigger: csp-pres-08-events-02-failures
  scope: javascript
  mTime: 1433839367298
  text: |
        casper.options.viewportSize= { width:1024, height: 600};
        
        casper.test.begin('Events - Listeners', function (test) {
        
            casper.start(casper.cli.options.baseUrl, function () {
                test.assertTitle("Home - CasperJS Mvc", "Page title is correct");
                test.assertTextExists("Ariya Hidayat", "Ariya Hidayat is present on page");
            });
        
            casper.then(function(){
                test.assertTextExists("Richard wilde", "Richard Wilde present on page");
            });        
        
            casper.then(function(){
                test.assertTextExists("Fred wilde", "Fred Wilde present on page");
            });        
        
        
            casper.run(function () {
                test.done();
            });
        
        
            casper.test.on("fail", function(failure) {
                casper.capture(failure.message + "-fail.jpg")
            });    
        });

